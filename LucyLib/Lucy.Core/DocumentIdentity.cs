//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil
//     Les modifications apportées à ce fichier seront perdues si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
namespace Lucy.Core
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Text;

    /// <summary>
    /// Represent an identified document
    /// </summary>
    [Serializable]
    public class DocumentIdentity : IComparable
    {
        /// <summary>
        /// Get or set th document Identification number
        /// </summary>
        public virtual string DocumentID
        {
            get;
            set;
        }

        /// <summary>
        /// Uri of the ressource
        /// </summary>
        public virtual String FilePath
        {
            get;
            set;
        }

        /// <summary>
        /// Get or set the date of last perfomed indexation 
        /// </summary>
        public virtual DateTime? LastIndexed
        {
            get;
            set;
        }

        /// <summary>
        /// Checshum of the document
        /// </summary>
        public virtual string Checksum
        {
            get;
            set;
        }

        /// <summary>
        /// Get or set the current state of the location
        /// </summary>
        public virtual IndexationStates State
        {
            get;
            set;
        }

        public int CompareTo(object obj)
        {
            if (obj == null)
            {
                return 1;
            }

            DocumentIdentity objB = obj as DocumentIdentity;
            if (objB == null)
            {
                return 1;
            }

            if (this.FilePath != objB.FilePath)
            {
                return 1;
            }
            // Partialy loaded object --> just check the filepath
            else if (string.IsNullOrEmpty(objB.Checksum)) 
            {
                return 0;
            }

            /// identity based on checksum whatever is the state
            return this.Checksum.CompareTo(objB.Checksum);
        }
    }
}

